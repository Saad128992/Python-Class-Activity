# -*- coding: utf-8 -*-
"""Group Task- Saad

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ImSxEd5VTaInaGC7XudoCrEQZDRz_VzF

Task 7 Subsets of a List
"""

# Given a list of integers, return all possible subsets (the power set) of the list.
# Solution
def subsets(nums):
    result = [[]]
    for num in nums:
        result += [curr + [num] for curr in result]
    return result

nums = [1, 2, 3]
print(subsets(nums))

"""Task 8  Longest Increasing Subsequence"""

# Given a list of integers, find the length of the longest subsequence of strictly increasing elements.
# Solution
def longest_increasing_subsequence(nums):
    if not nums:
        return 0

    dp = [1] * len(nums)

    for i in range(len(nums)):
        for j in range(i):
            if nums[i] > nums[j]:
                dp[i] = max(dp[i], dp[j] + 1)

    return max(dp)

nums = [10, 9, 2, 5, 3, 7, 101, 18]
print(longest_increasing_subsequence(nums))

"""Task 9 Maximum Product of Two Numbers"""

# Given a list of integers, return the maximum product of any two numbers in the list.
# Solution
def max_product(nums):
    nums.sort()
    return max(nums[0] * nums[1], nums[-1] * nums[-2])

nums = [1, 10, -5, 1, 100]
print(max_product(nums))